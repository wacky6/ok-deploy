#!/bin/bash

UPDATE="apt update -y"
INSTALL="apt install -y"
INSTALL_MIN="${INSTALL} --no-install-recommends"
CLEANUP="apt autoremove -y"
REPO_SOURCE=/etc/apt/sources.list

# distro (auto-detect)
DISTRO=`lsb_release -is | awk '{ print tolower($0) }'`
CODENAME=`lsb_release -cs | awk '{ print tolower($0) }'`

# ACME HTTP root, compose with acme.sh
ACME_HTTP_ROOT=/var/acme-http/

# install nginx signing keys and configures repo
curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \
    | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null
echo "deb [arch=$( dpkg-architecture -qDEB_BUILD_ARCH ) signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \
http://nginx.org/packages/mainline/ubuntu $( lsb_release -cs ) nginx" \
    | sudo tee /etc/apt/sources.list.d/nginx.list

# install from official repo
${UPDATE}
${INSTALL} nginx

# tls-modern .incl for composition
cat > /etc/nginx/tls-modern.incl <<-_EOF_
add_header X-Frame-Options DENY always;
add_header X-Content-Type-Options nosniff always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
add_header Referrer-Policy no-referrer-when-downgrade always;

ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;

ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;
_EOF_

# proxy header .incl for composition
cat > /etc/nginx/proxy-headers.incl <<-_EOF_
proxy_set_header X-Real-IP \$remote_addr;
proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
proxy_set_header Host \$http_host;
_EOF_

# acme responder, https redirect
mkdir -p ${ACME_HTTP_ROOT}
cat > /etc/nginx/conf.d/acme-http.conf <<-_EOF_
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root ${ACME_HTTP_ROOT};
    location ~ /.well-known {
        allow all;
    }
    location / {
        return 301 https://\$host\$request_uri;
    }
}
_EOF_

# example config
cat > /etc/nginx/conf.d/example <<-_EOF_
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name \$SNI_NAME;

    ssl_certificate /root/tls/\$APP-cert.pem;
    ssl_certificate_key /root/tls/\$APP-key.pem;

    include /etc/nginx/tls-modern.incl;

    location / {
        # root /var/www;
        # index index.html;
        include /etc/nginx/proxy-headers.incl;
        return 204;
    }

    location /upstream/ {
        proxy_pass http://127.0.0.1:10000/;

        # Uncomment to forward WebSocket
        #proxy_set_header Upgrade \$http_upgrade;
        #proxy_set_header Connection "Upgrade";
        #proxy_set_header Host \$http_host;
    }
}
_EOF_

# gzip text-based data
cat > /etc/nginx/conf.d/gzip.conf <<-_EOF_
gzip_vary on;
gzip_proxied expired no-cache no-store private auth;
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
_EOF_

# restart
systemctl enable nginx
service nginx restart

echo ok-deploy: $(nginx -v)

